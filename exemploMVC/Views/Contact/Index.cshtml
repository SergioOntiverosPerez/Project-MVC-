@{
    ViewBag.Title = "Contacts";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 id="counter"></h2>

<p>
    <a id="newContact" onclick="NewContact()" class="btn btn-primary">Create New Contact</a>
</p>

<input type="text" id="search" onkeyup="SearchContact()" placeholder="Search for names..." class="form-control-sm" />

<table id="contactsTable" class="table table-hover">
    <thead>
        <tr class="header">
            <th scope="col">Name</th>
            <th scope="col">E-mail</th>
            <th scope="col">City</th>
            <th scope="col"></th>
            <th scope="col"></th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody id="contacts">
    </tbody>
</table>

@section Scripts{
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script>
        const uriContacts = window.location.origin + "/api/contacts";

        console.log(uriContacts);

        let contacts = [];
        getContacts();

        function getContacts() {
            fetch(uriContacts)
                .then(response => response.json())
                .then(data => _displayContacts(data))
                .catch(error => console.error('Unable to get contacts', error));

        }

        function deleteContact(id) {
            const direccion = uriContacts + `/${id.trim()}`;
            console.log(direccion);
            var result = confirm("Do you want to delete?")
            if (result)
            {
                fetch(direccion,
                  {
                    method: 'DELETE'
                  }).then(() => getContacts())
                    .catch(error => console.error('Unable to delete contact', error));   
            } 
        }

        function _displayContactsCount(contactCount) {
            const name = (contactCount == 1) ? 'Contact' : 'Contacts';
            document.getElementById("counter").innerHTML = `${contactCount} ${name}`;
        }

        function _displayContacts(data) {

            console.log(data);
            const tBody = document.getElementById("contacts");
            tBody.innerHTML = "";

            _displayContactsCount(data.length);

            const button = document.createElement('button');
            const a = document.createElement('a');

            data.forEach(contact => {

                let editButton = a.cloneNode(false);
                editButton.innerText = 'Edit';
                editButton.classList.add('btn');
                editButton.classList.add('btn-secondary');
                let urlParam = window.location.origin + "/Contact/UpdateContact/" + contact.ContactID;
                editButton.setAttribute('href', urlParam);

                let detailsButton = a.cloneNode(false);
                detailsButton.innerText = 'Details';
                detailsButton.classList.add('btn');
                detailsButton.classList.add('btn-info');
                let urlDetails = window.location.origin + "/Contact/GetContact/" + contact.ContactID;
                detailsButton.setAttribute('href', urlDetails);


                let deleteButton = button.cloneNode(false);
                deleteButton.innerText = 'Delete';
                deleteButton.setAttribute('onclick', 'deleteContact(" '+ contact.ContactID +' ")');
                deleteButton.classList.add('btn');
                deleteButton.classList.add('btn-danger');


                let tr = tBody.insertRow();

                let td1 = tr.insertCell(0);
                let textNode1 = document.createTextNode(contact.Name);
                td1.appendChild(textNode1);

                let td2 = tr.insertCell(1);
                let textNode2 = document.createTextNode(contact.Email);
                td2.appendChild(textNode2);

                let td3 = tr.insertCell(2);
                let textNode3 = document.createTextNode(contact.City);
                td3.appendChild(textNode3);

                let td5 = tr.insertCell(3);
                td5.appendChild(editButton);

                let td6 = tr.insertCell(4);
                td6.appendChild(detailsButton);

                let td7 = tr.insertCell(5);
                td7.appendChild(deleteButton);
            });
            contacts = data;
        }

        function SearchContact() {
            var input, filter, table, tr, td, i, textValue;
            var cont = 0;
            input = document.getElementById("search");
            filter = input.value.toUpperCase();
            table = document.getElementById("contactsTable");
            tr = table.getElementsByTagName("tr");

            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[0];

                if (td) {

                    textValue = td.textContent || td.innerText

                    if (textValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                        cont = cont + 1;
                        _displayContactsCount(cont)
                    } else {
                        tr[i].style.display = "none";
                        _displayContactsCount(cont)
                    }
                }
            }
        }

        function NewContact() {
            const a = document.getElementById("newContact");
            const urlNewContact = window.location.origin + "/Contact/CreateContact";
            a.setAttribute('href', urlNewContact);
        }
    </script>

}
